[tool.poetry]
name = "pytest-framework"
version = "1.0.0"
description = "现代化接口测试自动化框架 - 功能强大、易于扩展的Python接口测试框架"
authors = ["ljxpython <1030470148@qq.com>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/your-repo/pytest-framework"
repository = "https://github.com/your-repo/pytest-framework"
documentation = "https://pytest-framework.readthedocs.io"
keywords = ["pytest", "api-testing", "automation", "testing-framework", "http-client"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Testing",
    "Topic :: Software Development :: Quality Assurance",
]

[tool.poetry.dependencies]
python = "^3.12"
requests = "^2.32.3"
black = "^24.8.0"
isort = "^5.13.2"
pre-commit = "^3.8.0"
dynaconf = "^3.2.6"
loguru = "^0.7.2"
pyyaml = "^6.0.2"
pytest = "^8.3.3"
assertpy = "^1.1"
click = "^8.1.7"
faker = "^29.0.0"
jmespath = "^1.0.1"
jsonpath-ng = "^1.6.1"
numpy = "^2.1.1"
pandas = "^2.2.3"
polling2 = "^0.5.0"
pytest-ordering = "^0.6"
pytest-repeat = "^0.9.3"
pytest-rerunfailures = "^14.0"
pytest-xdist = "^3.6.1"
retry = "^0.9.2"
allure-pytest = "^2.13.5"
humps = "^0.2.2"
adb-shell = "^0.4.4"
peewee = "^3.17.6"
pymysql = "^1.1.1"
jsonschema = "^4.20.0"


[tool.poetry.dev-dependencies]
pytest-cov = "^4.0.0"
pytest-html = "^4.1.1"
pytest-mock = "^3.12.0"
black = "^24.8.0"
isort = "^5.13.2"
flake8 = "^6.1.0"
mypy = "^1.7.0"

[tool.poetry.scripts]
pytest-framework = "main:run_pytest"

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["src", "tests", "conf"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/venv/*",
    "*/__pycache__/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError"
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
